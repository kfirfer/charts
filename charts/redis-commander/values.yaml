# Default values for redis-commander.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: visol/redis-commander
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.8.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
redis:
  # Specifies a single Redis host
  #host: "redis-master"

  #port: 6379

  # Specifies redis username
  #username: "Something"

  # Specifies redis password
  #password: "Something"

  # Specifies multiple redis endpoints <label:host:port>,...
  #hosts: "local:localhost:6379,myredis:10.10.20.30"

  #tls: true

annotations: {}

httpAuth:
  # Specify http basic username and password to protect access to redis commander web ui
  username: ""
  password: ""

# extra env vars for the main container redis-commander
env: []

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## opt in/out of automounting API credentials into container
  ## https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  automountToken: true

podAnnotations: {}

# Additional pod labels for deployment's template. Optional
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  #  ingressClassName: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Init containers to add to deployment's pod spec. At least one plugin provider image is required.
# If the value is a string then it is evaluated as a template.
initContainers: []
# - name: plugin-for-csi
#   image: velero/velero-plugin-for-csi:v0.3.0
#   imagePullPolicy: IfNotPresent
#   volumeMounts:
#     - mountPath: /target
#       name: plugins
# - name: plugin-for-aws
#   image: velero/velero-plugin-for-aws:v1.5.0
#   imagePullPolicy: IfNotPresent
#   volumeMounts:
#     - mountPath: /target
#       name: plugins

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
#  preStop:
#    exec:
#      command: ["/bin/sh", "-c", "sleep 3"]

extraManifests: []

priorityClassName: ""

tests:
  image:
    registry: docker.io
    repository: busybox
    pullPolicy: IfNotPresent
    tag: "1-musl"

